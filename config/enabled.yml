# Enabled cops

######### STYLE #########

Layout/AccessModifierIndentation:
  Description: Check indentation of private/protected visibility modifiers.
  StyleGuide: '#indent-public-private-protected'

Layout/ArrayAlignment:
  Description: >-
                 Align the elements of an array literal if they span more than
                 one line.
  StyleGuide: '#align-multiline-arrays'

Layout/HashAlignment:
  Description: >-
                 Align the elements of a hash literal if they span more than
                 one line.

Layout/ParameterAlignment:
  Description: Align the parameters of a method call if they span more than one line.
  StyleGuide: "#no-double-indent"
  EnforcedStyle: with_fixed_indentation
  SupportedStyles:
  - with_first_parameter
  - with_fixed_indentation
  IndentationWidth: 2

Layout/BlockEndNewline:
  Description: 'Put end statement of multiline block on its own line.'

Style/DefWithParentheses:
  Description: 'Use def with parentheses when there are arguments.'
  StyleGuide: '#method-parens'

Style/MethodDefParentheses:
  Description: Checks if the method definitions have or don't have parentheses.
  StyleGuide: "#method-parens"
  EnforcedStyle: require_parentheses
  SupportedStyles:
  - require_parentheses
  - require_no_parentheses
  - require_no_parentheses_except_multiline

Layout/FirstMethodArgumentLineBreak:
  Description: Checks for a line break before the first argument in a multi-line method
    call.

Layout/MultilineMethodCallBraceLayout:
  Description: Checks that the closing brace in a method call is either on the same
    line as the last method argument, or a new line.
  EnforcedStyle: symmetrical
  SupportedStyles:
  - symmetrical
  - new_line
  - same_line

Layout/MultilineMethodDefinitionBraceLayout:
  Description: Checks that the closing brace in a method definition is either on the
    same line as the last method parameter, or a new line.
  EnforcedStyle: symmetrical
  SupportedStyles:
  - symmetrical
  - new_line
  - same_line

Layout/ClosingParenthesisIndentation:
  Description: Checks the indentation of hanging closing parentheses.

Style/BlockDelimiters:
  Description: >-
                Avoid using {...} for multi-line blocks (multiline chaining is
                always ugly).
                Prefer {...} over do...end for single-line blocks.
  StyleGuide: '#single-line-blocks'

Style/CommentAnnotation:
  Description: >-
                 Checks formatting of special comments
                 (TODO, FIXME, OPTIMIZE, HACK, REVIEW).
  StyleGuide: '#annotate-keywords'

Style/ClassAndModuleChildren:
  Description: 'Checks style of children classes and modules.'

Naming/ConstantName:
  Description: 'Constants should use SCREAMING_SNAKE_CASE.'
  StyleGuide: '#screaming-snake-case'

Layout/EndOfLine:
  Description: 'Use Unix-style line endings.'
  StyleGuide: '#crlf'

Layout/ExtraSpacing:
  Description: 'Do not use unnecessary spacing.'

Layout/IndentationWidth:
  Description: 'Use 2 spaces for indentation.'
  StyleGuide: '#spaces-indentation'

Style/TrailingCommaInArguments:
  Description: 'Checks for trailing comma in argument lists.'
  StyleGuide: '#no-trailing-params-comma'

Style/TrailingCommaInArrayLiteral:
  Description: 'Checks for trailing comma in array literals.'
  StyleGuide: '#no-trailing-array-commas'

Style/DoubleNegation:
  Description: 'Checks for uses of double negation (!!).'
  StyleGuide: '#no-bang-bang'

Layout/ElseAlignment:
  Description: 'Align elses and elsifs correctly.'

Style/EmptyElse:
  Description: 'Avoid empty else-clauses.'

Style/EmptyCaseCondition:
  Description: 'Avoid empty condition in case statements.'

Layout/EmptyLineBetweenDefs:
  Description: 'Use empty lines between defs.'
  StyleGuide: '#empty-lines-between-methods'

Layout/EmptyLinesAroundAccessModifier:
  Description: "Keep blank lines around access modifiers."

Layout/EmptyLines:
  Description: "Don't use several empty lines in a row."

Layout/EmptyLinesAroundBlockBody:
  Description: "Keeps track of empty lines around block bodies."

Layout/EmptyLinesAroundClassBody:
  Description: "Keeps track of empty lines around class bodies."

Layout/EmptyLinesAroundModuleBody:
  Description: "Keeps track of empty lines around module bodies."

Layout/EmptyLinesAroundMethodBody:
  Description: "Keeps track of empty lines around method bodies."

Style/EmptyLiteral:
  Description: 'Prefer literals to Array.new/Hash.new/String.new.'
  StyleGuide: '#literal-array-hash'

Style/EmptyMethod:
  Description: 'Checks the formatting of empty method definitions.'
  StyleGuide: '#no-single-line-methods'

Naming/FileName:
  Description: 'Use snake_case for source file names.'
  StyleGuide: '#snake-case-files'

Layout/FirstParameterIndentation:
  Description: 'Checks the indentation of the first parameter in a method call.'

Style/HashSyntax:
  Description: >-
                 Prefer Ruby 1.9 hash syntax { a: 1, b: 2 } over 1.8 syntax
                 { :a => 1, :b => 2 }.
  StyleGuide: '#hash-literals'

Layout/FirstHashElementIndentation:
  Description: 'Checks the indentation of the first key in a hash literal.'

Style/Lambda:
  Description: 'Use the new lambda literal syntax for single-line blocks.'
  StyleGuide: '#lambda-multi-line'
  Enabled: true

Style/MethodCallWithoutArgsParentheses:
  Description: 'Do not use parentheses for method calls with no arguments.'
  StyleGuide: '#method-invocation-parens'

Style/RedundantParentheses:
  Description: "Checks for parentheses that seem not to serve any purpose."

Style/RedundantReturn:
  Description: "Don't use return where it's not required."
  StyleGuide: '#no-explicit-return'

Style/SafeNavigation:
  Description: >-
                  This cop transforms usages of a method call safeguarded by
                  a check for the existance of the object to
                  safe navigation (`&.`).

Layout/SpaceBeforeFirstArg:
  Description: >-
                 Checks that exactly one space is used between a method name
                 and the first argument for method calls without parentheses.

Layout/SpaceAfterColon:
  Description: 'Use spaces after colons.'
  StyleGuide: '#spaces-operators'

Layout/SpaceBeforeComma:
  Description: 'No spaces before commas.'

Layout/SpaceAfterComma:
  Description: 'Use spaces after commas.'
  StyleGuide: '#spaces-operators'

Layout/SpaceAfterMethodName:
  Description: >-
                 Do not put a space between a method name and the opening
                 parenthesis in a method definition.
  StyleGuide: '#parens-no-spaces'

Layout/SpaceInsideParens:
  Description: 'No spaces after ( or before ).'
  StyleGuide: '#no-spaces-braces'

Layout/SpaceBeforeSemicolon:
  Description: 'No spaces before semicolons.'

Layout/IndentationStyle:
  Description: 'No hard tabs.'
  StyleGuide: '#spaces-indentation'

Layout/TrailingWhitespace:
  Description: 'Avoid trailing whitespace.'
  StyleGuide: '#no-trailing-whitespace'

Layout/TrailingEmptyLines:
  Description: 'Checks trailing blank lines and final newline.'
  StyleGuide: '#newline-eof'

Style/ZeroLengthPredicate:
  Description: 'Use #empty? when testing for objects of length 0.'

Style/Encoding:
  Description: 'Use UTF-8 as the source file encoding.'
  StyleGuide: '#utf-8'

######### METRICS #########

Metrics/AbcSize:
  Description: >-
                 A calculated magnitude based on number of assignments,
                 branches, and conditions.
  Reference: 'http://c2.com/cgi/wiki?AbcMetric'
  Enabled: true
  Severity: refactor

######### RAILS #########

Rails/ActionFilter:
  Description: 'Enforces consistent use of action filter methods.'

Rails/ApplicationRecord:
  Description: 'Models subclass ApplicationRecord with Rails 5.0'
  Enabled: false

Rails/EnumUniqueness:
  Description: 'Avoid duplicate integers in hash-syntax `enum` declaration.'

Rails/DynamicFindBy:
  Description: 'Use `find_by` instead of dynamic `find_by_*`.'
  StyleGuide: 'https://github.com/bbatsov/rails-style-guide#find_by'

Rails/Output:
  Description: 'Checks for calls to puts, print, etc.'

Rails/SafeNavigation:
  Description: "Use Ruby's safe navigation operator (`&.`) instead of `try!`"
  ConvertTry: true

Rails/Date:
  Description: >-
                  Checks the correct usage of date aware methods,
                  such as Date.today, Date.current etc.

Rails/Delegate:
  Description: 'Prefer delegate method for delegations.'

Rails/TimeZone:
  Description: 'Checks the correct usage of time zone aware methods.'
  StyleGuide: 'https://github.com/bbatsov/rails-style-guide#time'
  Reference: 'http://danilenko.org/2012/7/6/rails_timezones'

Rails/FindBy:
  Description: 'Prefer find_by over where.first.'
  StyleGuide: 'https://github.com/bbatsov/rails-style-guide#find_by'

Rails/FindEach:
  Description: 'Prefer all.find_each over all.find.'
  StyleGuide: 'https://github.com/bbatsov/rails-style-guide#find-each'

Rails/HasAndBelongsToMany:
  Description: 'Prefer has_many :through to has_and_belongs_to_many.'
  StyleGuide: 'https://github.com/bbatsov/rails-style-guide#has-many-through'

Rails/PluralizationGrammar:
  Description: 'Checks for incorrect grammar when using methods like `3.day.ago`.'

Rails/SkipsModelValidations:
  Description: 'Checks for use of methods which skip validations.'

Rails/UniqBeforePluck:
  Description: 'Prefer the use of uniq or distinct before pluck.'

Rails/Validation:
  Description: 'Use validates :attribute, hash of validations.'

Security/JSONLoad:
  Description: >-
                 Prefer usage of `JSON.parse` over `JSON.load` due to potential
                 security issues. See reference for more information.
  Reference: 'http://ruby-doc.org/stdlib-2.3.0/libdoc/json/rdoc/JSON.html#method-i-load'
  # Autocorrect here will change to a method that may cause crashes depending
  # on the value of the argument.
  AutoCorrect: false

Rails/SaveBang:
  Description: 'Identifies possible cases where Active Record save! or related should be used.'
  StyleGuide: 'https://github.com/bbatsov/rails-style-guide#save-bang'

######### Bundler #########

Bundler/DuplicatedGem:
  Description: 'Checks for duplicate gem entries in Gemfile.'
  Include:
    - '**/Gemfile'
    - '**/gems.rb'

######### LINT #########

Lint/AmbiguousOperator:
  Description: >-
                 Checks for ambiguous operators in the first argument of a
                 method invocation without parentheses.
  StyleGuide: '#method-invocation-parens'

Lint/AmbiguousRegexpLiteral:
  Description: >-
                 Checks for ambiguous regexp literals in the first argument of
                 a method invocation without parentheses.

Lint/AssignmentInCondition:
  Description: "Don't use assignment in conditions."
  StyleGuide: '#safe-assignment-in-condition'

Layout/BlockAlignment:
  Description: 'Align block ends correctly.'

Lint/CircularArgumentReference:
  Description: "Default values in optional keyword arguments and optional ordinal arguments should not refer back to the name of the argument."

Layout/ConditionPosition:
  Description: >-
                 Checks for condition placed in a confusing position relative to
                 the keyword.
  StyleGuide: '#same-line-condition'

Lint/Debugger:
  Description: 'Check for debugger calls.'

Layout/DefEndAlignment:
  Description: 'Align ends corresponding to defs correctly.'

Lint/DeprecatedClassMethods:
  Description: 'Check for deprecated class method calls.'

Lint/DuplicateCaseCondition:
  Description: 'Do not repeat values in case conditionals.'

Lint/DuplicateMethods:
  Description: 'Check for duplicate method definitions.'

Lint/DuplicateHashKey:
  Description: 'Check for duplicate keys in hash literals.'

Lint/EachWithObjectArgument:
  Description: 'Check for immutable argument given to each_with_object.'

Lint/ElseLayout:
  Description: 'Check for odd code arrangement in an else block.'

Lint/EmptyEnsure:
  Description: 'Checks for empty ensure block.'

Lint/EmptyExpression:
  Description: 'Checks for empty expressions.'

Lint/EmptyInterpolation:
  Description: 'Checks for empty string interpolation.'

Lint/EmptyWhen:
  Description: 'Checks for `when` branches with empty bodies.'

Layout/EndAlignment:
  Description: 'Align ends correctly.'

Style/EndBlock:
  Description: 'END blocks should not be placed inside method definitions.'

Lint/EnsureReturn:
  Description: 'Do not use return in an ensure block.'
  StyleGuide: '#no-return-ensure'

Lint/FloatOutOfRange:
  Description: >-
                 Catches floating-point literals too large or small for Ruby to
                 represent.

Lint/FormatParameterMismatch:
  Description: 'The number of parameters to format/sprint must match the fields.'

Lint/SuppressedException:
  Description: "Don't suppress exception."
  StyleGuide: '#dont-hide-exceptions'

Lint/ImplicitStringConcatenation:
  Description: >-
                 Checks for adjacent string literals on the same line, which
                 could better be represented as a single string literal.

Lint/IneffectiveAccessModifier:
  Description: >-
                 Checks for attempts to use `private` or `protected` to set
                 the visibility of a class method, which does not work.

Lint/InheritException:
  Description: 'Avoid inheriting from the `Exception` class.'

Lint/LiteralAsCondition:
  Description: 'Checks of literals used in conditions.'

Lint/LiteralInInterpolation:
  Description: 'Checks for literals used in interpolation.'

Lint/Loop:
  Description: >-
                 Use Kernel#loop with break rather than begin/end/until or
                 begin/end/while for post-loop tests.
  StyleGuide: '#loop-with-break'

Lint/NestedMethodDefinition:
  Description: 'Do not use nested method definitions.'
  StyleGuide: '#no-nested-methods'

Lint/NextWithoutAccumulator:
  Description:  >-
                  Do not omit the accumulator when calling `next`
                  in a `reduce`/`inject` block.

Lint/NonLocalExitFromIterator:
  Description: 'Do not use return in iterator to cause non-local exit.'

Lint/ParenthesesAsGroupedExpression:
  Description: >-
                 Checks for method calls with a space before the opening
                 parenthesis.
  StyleGuide: '#parens-no-spaces'

Lint/PercentStringArray:
  Description: >-
                 Checks for unwanted commas and quotes in %w/%W literals.

Lint/PercentSymbolArray:
  Description: >-
                 Checks for unwanted commas and colons in %i/%I literals.

Lint/RandOne:
  Description: >-
                 Checks for `rand(1)` calls. Such calls always return `0`
                 and most likely a mistake.

Lint/RequireParentheses:
  Description: >-
                 Use parentheses in the method call to avoid confusion
                 about precedence.

Lint/RescueException:
  Description: 'Avoid rescuing the Exception class.'
  StyleGuide: '#no-blind-rescues'

Lint/ShadowedException:
  Description: >-
                  Avoid rescuing a higher level exception
                  before a lower level exception.

Lint/ShadowingOuterLocalVariable:
  Description: >-
                 Do not use the same name as outer local variable
                 for block arguments or block local variables.

Lint/RedundantStringCoercion:
  Description: 'Checks for Object#to_s usage in string interpolation.'
  StyleGuide: '#no-to-s'

Lint/UnderscorePrefixedVariableName:
  Description: 'Do not use prefix `_` for a variable that is used.'

Lint/UnifiedInteger:
  Description: 'Use Integer instead of Fixnum or Bignum'

Lint/RedundantCopDisableDirective:
  Description: >-
                 Checks for rubocop:disable comments that can be removed.
                 Note: this cop is not disabled when disabling all cops.
                 It must be explicitly disabled.

Lint/RedundantSplatExpansion:
  Description: 'Checks for splat unnecessarily being called on literals'

Lint/UnusedBlockArgument:
  Description: 'Checks for unused block arguments.'
  StyleGuide: '#underscore-unused-vars'

Lint/UnusedMethodArgument:
  Description: 'Checks for unused method arguments.'
  StyleGuide: '#underscore-unused-vars'

Lint/UnreachableCode:
  Description: 'Unreachable code.'

Lint/UselessAccessModifier:
  Description: 'Checks for useless access modifiers.'
  ContextCreatingMethods: []

Lint/UselessAssignment:
  Description: 'Checks for useless assignment to a local variable.'
  StyleGuide: '#underscore-unused-vars'

Lint/BinaryOperatorWithIdenticalOperands:
  Description: 'Checks for comparison of something with itself.'

Lint/UselessSetterCall:
  Description: 'Checks for useless setter call to a local variable.'

Lint/Void:
  Description: 'Possible use of operator/literal/variable in void context.'

Layout/CommentIndentation:
  Description: Indentation of comments.

Layout/EmptyLinesAroundArguments:
  Description: Keeps track of empty lines around method arguments.

Layout/EmptyLinesAroundBeginBody:
  Description: Keeps track of empty lines around begin-end bodies.
  StyleGuide: "#empty-lines-around-bodies"

Layout/FirstHashElementLineBreak:
  Description: Checks for a line break before the first element in a multi-line hash.

Layout/FirstArrayElementLineBreak:
  Description: Checks for a line break before the first element in a multi-line array.

Layout/IndentationConsistency:
  Description: This cop checks for inconsistent indentation.
  StyleGuide: "#spaces-indentation"
  EnforcedStyle: indented_internal_methods

Lint/RedundantRequireStatement:
  Description: Checks for unnecessary `require` statement.

Naming/AsciiIdentifiers:
  Description: Use only ascii symbols in identifiers.
  StyleGuide: "#english-identifiers"

Naming/ClassAndModuleCamelCase:
  Description: Use CamelCase for classes and modules.
  StyleGuide: "#camelcase-classes"

Naming/MethodName:
  Description: Use the configured style when naming methods.
  StyleGuide: "#snake-case-symbols-methods-vars"
  EnforcedStyle: snake_case

Naming/VariableName:
  Description: Use the configured style when naming variables.
  StyleGuide: "#snake-case-symbols-methods-vars"
  EnforcedStyle: snake_case

Style/ArrayJoin:
  Description: Use Array#join instead of Array#*.
  StyleGuide: "#array-join"

Style/BlockComments:
  Description: Do not use block comments.
  StyleGuide: "#no-block-comments"

Style/OneLineConditional:
  Description: Favor the ternary operator(?:) over if/then/else/end constructs.
  StyleGuide: "#ternary-operator"

Style/SymbolLiteral:
  Description: Use plain symbols instead of string symbols when possible.

Style/TrailingMethodEndStatement:
  Description: Checks for trailing end statement on line of method body.

Style/TrailingBodyOnModule:
  Description: Module body goes below module statement.

# RSpec

RSpec/FactoryBot/AttributeDefinedStatically:
  Description: Always declare attribute values as blocks.
  StyleGuide: http://www.rubydoc.info/gems/rubocop-rspec/RuboCop/Cop/RSpec/FactoryBot/AttributeDefinedStatically

RSpec/AroundBlock:
  Description: Checks that around blocks actually run the test.
  StyleGuide: http://www.rubydoc.info/gems/rubocop-rspec/RuboCop/Cop/RSpec/AroundBlock

RSpec/Be:
  Description: Check for expectations where `be` is used without argument.
  StyleGuide: http://www.rubydoc.info/gems/rubocop-rspec/RuboCop/Cop/RSpec/Be

RSpec/DescribeSymbol:
  Description: Avoid describing symbols.
  StyleGuide: http://www.rubydoc.info/gems/rubocop-rspec/RuboCop/Cop/RSpec/DescribeSymbol

RSpec/ExampleWithoutDescription:
  Description: Checks for examples without a description.
  EnforcedStyle: always_allow
  StyleGuide: http://www.rubydoc.info/gems/rubocop-rspec/RuboCop/Cop/RSpec/ExampleWithoutDescription

RSpec/ImplicitExpect:
  Description: Check that a consistent implicit expectation style is used.
  EnforcedStyle: is_expected
  StyleGuide: http://www.rubydoc.info/gems/rubocop-rspec/RuboCop/Cop/RSpec/ImplicitExpect

RSpec/IteratedExpectation:
  Description: Check that `all` matcher is used instead of iterating over an array.
  StyleGuide: http://www.rubydoc.info/gems/rubocop-rspec/RuboCop/Cop/RSpec/IteratedExpectation

RSpec/MultipleDescribes:
  Description: Checks for multiple top level describes.
  StyleGuide: http://www.rubydoc.info/gems/rubocop-rspec/RuboCop/Cop/RSpec/MultipleDescribes

RSpec/MultipleSubjects:
  Description: Checks if an example group defines `subject` multiple times.
  StyleGuide: http://www.rubydoc.info/gems/rubocop-rspec/RuboCop/Cop/RSpec/MultipleSubjects

RSpec/RepeatedExample:
  Description: Check for repeated examples within example groups.
  StyleGuide: http://www.rubydoc.info/gems/rubocop-rspec/RuboCop/Cop/RSpec/RepeatedExample

RSpec/OverwritingSetup:
  Description: Checks if there is a let/subject that overwrites an existing one.
  StyleGuide: http://www.rubydoc.info/gems/rubocop-rspec/RuboCop/Cop/RSpec/OverwritingSetup

Layout/SpaceInsideStringInterpolation:
  Description: Checks for padding/surrounding spaces inside string interpolation.
  EnforcedStyle: no_space

Style/ReturnNil:
  Description: Use return instead of return nil.
  EnforcedStyle: return

Style/Dir:
  Description: Use the `__dir__` method to retrieve the canonicalized absolute path
    to the current file.
  Enabled: true

Style/ExpandPathArguments:
  Description: Use `expand_path(__dir__)` instead of `expand_path('..', __FILE__)`.
  Enabled: true

Layout/SpaceInsideHashLiteralBraces:
  Enabled: true

Style/RedundantFreeze:
  Enabled: true

RSpec/ScatteredSetup:
  Enabled: true

RSpec/ScatteredLet:
  Enabled: true

RSpec/Focus:
  Enabled: true

Style/AndOr:
  Enabled: true
  EnforcedStyle: always

Style/Not:
  Enabled: true

Style/NegatedUnless:
  Enabled: true
